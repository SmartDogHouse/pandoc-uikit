'on':
  push:
    branches:
      - master
jobs:
  FindTagJob:
    runs-on: ubuntu-latest
    outputs:
      outputTagJob: '${{ steps.relese_msg.outputs.RELESE_NAME }}'
    steps:
      - name: Clone Repo with Checkout
        uses: actions/checkout@v2
      - name: Extract relese message if present
        shell: bash
        id: extract_tag_msg
        run: >
          echo "::set-output name=TAG_MSG::$(echo
          "${{github.event.head_commit.message}}" | grep -o -P
          '(?<=-TAG{).*(?=})')"
      - name: Fetch tag
        shell: bash
        run: |
          git fetch --prune --unshallow --tags
      - name: Fill tag if empty
        id: relese_msg
        shell: bash
        run: |
          if [ "${{steps.extract_tag_msg.outputs.TAG_MSG}}" != "" ]
          then
              echo "::set-output name=RELESE_NAME::$(echo ${{steps.extract_tag_msg.outputs.TAG_MSG}})"
          else
              val=$(git describe --tags --abbrev=0)
              newval=$(echo ${val##*.})
              newval=$((newval+1))
              newval="${val%.*}.$newval"
              echo "::set-output name=RELESE_NAME::$(echo $newval)"
              echo $newval
          fi
  DeployJob:
    needs: FindTagJob
    if: '${{ needs.FindTagJob.outputs.outputTagJob != '''' }}'
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo with Checkout
        uses: actions/checkout@v2
      - name: Create relese if tag commit contain a tag message
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: '${{ needs.FindTagJob.outputs.outputTagJob }}'
          release_name: 'Release ${{ needs.FindTagJob.outputs.outputTagJob }}'
          draft: falses
          prerelease: false
  TelegramJobSuccess:
    needs: DeployJob
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send custom Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: '${{ secrets.TELEGRAM_TO }}'
          token: '${{ secrets.TELEGRAM_TOKEN }}'
          message: |
            ${{ github.event_name }} event,
            on github.com/${{ github.repository }},
            by ${{ github.actor }}:
            <b>${{ github.event.head_commit.message }}</b>
            âœ… <b>SUCCEDED</b>
          format: html
          disable_web_page_preview: true

